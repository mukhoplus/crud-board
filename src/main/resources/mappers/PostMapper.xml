<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.crudboard.domain.post.PostMapper">

    <!-- 전체 컬럼 -->
    <sql id="postColumns">
        id,
        title,
        content,
        writer,
        password,
        viewer,
        is_notice,
        is_deleted,
        created_date,
        modified_date
    </sql>

    <!-- 게시글 저장 -->
    <insert id="save" parameterType="com.example.crudboard.domain.post.PostRequest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO board (
            <include refid="postColumns" />
        ) VALUES (
            #{id},
            #{title},
            #{content},
            #{writer},
            #{password},
            0,
            #{isNotice},
            0,
            NOW(),
            NULL
        )
    </insert>

    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="com.example.crudboard.domain.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            board
        WHERE
            id = #{value}
    </select>

    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.example.crudboard.domain.post.PostRequest">
        UPDATE
            board
        SET
            modified_date = NOW(),
            title = #{title},
            content = #{content},
            writer = #{writer},
            is_notice = #{isNotice}
        WHERE
            id = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        UPDATE
            board
        SET
            is_deleted = 1
        WHERE
            id = #{id}
    </delete>

    <!-- 게시글 목록 조회 -->
    <select id="findAll" parameterType="com.example.crudboard.common.dto.SearchDto" resultType="com.example.crudboard.domain.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            board
        WHERE
            is_deleted = 0
            <include refid="search" />
        ORDER BY
            is_notice DESC, id DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <!-- 순차글 목록 조회 -->
    <select id="findAllLinear" parameterType="com.example.crudboard.common.dto.SearchDto" resultType="com.example.crudboard.domain.post.PostResponse">
        SELECT
            <include refid="postColumns" />
        FROM
            board
        WHERE
            is_deleted = 0
            <include refid="search" />
        ORDER BY
            id DESC
    </select>

    <!-- 조회수 증가 -->
    <update id="addViewer" parameterType="long">
        UPDATE
            board
        SET
            viewer = viewer + 1
        WHERE
            id = #{id}
    </update>

    <!-- 게시글 수 -->
    <select id="count" parameterType="com.example.crudboard.common.dto.SearchDto" resultType="int">
        SELECT
            COUNT(*)
        FROM
            board
        WHERE
            is_deleted = 0
            <include refid="search" />
    </select>

    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND title LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND content LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND writer LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>
                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND (
                    title LIKE CONCAT('%', #{keyword}, '%')
                    OR content LIKE CONCAT('%', #{keyword}, '%')
                    OR writer LIKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>
</mapper>
